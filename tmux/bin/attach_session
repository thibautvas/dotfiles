#!/bin/bash

if [[ -n $TMUX ]]; then
  TMUX_ATTACH='tmux switch-client'
else
  TMUX_ATTACH='tmux attach-session'
fi


if [[ -n $1 ]]; then
  $TMUX_ATTACH -t "$1"
else
  local_sessions=$(tmux list-sessions 2>/dev/null)

  if declare -p SSH_CLIENT &>/dev/null; then
    sessions=$(
      echo "$local_sessions" | sed 's/.*/\x1b[35m&/'
      echo 'new session' | sed 's/.*/\x1b[3m&/'
    )
  else
    remote_sessions=$(cat $HOME/.cache/mozart/tmux_sessions.txt 2>/dev/null)
    sessions=$(
      echo "$local_sessions" | sed 's/.*/\x1b[32m&/'
      echo 'new session' | sed 's/.*/\x1b[3m&/'
      echo "$remote_sessions" | sed 's/.*/\x1b[0;35m&/'
      echo 'new mozart session' | sed 's/.*/\x1b[3m&/'
    )
  fi

  target=$(printf "%s\n" "$sessions" | fzf --ansi --reverse --height 10)

  if [[ -z $target ]]; then
    exit 1
  elif echo "$local_sessions" | grep -qF "$target"; then
    $TMUX_ATTACH -t $(echo "$target" | cut -d : -f1)
  elif [[ "$target" == 'new session' ]]; then
    $HOME/.config/tmux/bin/new_session
  else
    if echo "$remote_sessions" | grep -qF "$target"; then
      ssh mozart -t "LC_ALL=en_US.UTF-8 tmux attach-session -t $(echo $target | cut -d : -f1)"
    elif [[ "$target" == 'new mozart session' ]]; then
      ssh mozart -t "LC_ALL=en_US.UTF-8 /home/$USER/.config/tmux/bin/new_session"
    fi
    [[ $? -eq 0 ]] && ssh mozart -t 'tmux list-sessions' > "$HOME/.cache/mozart/tmux_sessions.txt"
  fi
fi
